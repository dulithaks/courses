version: '3'
services:

  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - app-network

  #MySQL Service
  postgresql:
    image: postgres
    container_name: pg-docker
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./docker-compose/pgsql/:/etc/postgresql/
      - ./data:/var/lib/postgresql/data
      - ./docker-compose/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always
    networks:
      - app-network

#  # MySQL Service
#  db:
#    image: postgres:10.9-alpine
#    container_name: db
#    restart: unless-stopped
#    tty: true
#    ports:
#      - "5432:5432"
#    environment:
#      MYSQL_DATABASE: laravel
#      MYSQL_ROOT_PASSWORD: password
#      SERVICE_TAGS: dev
#      SERVICE_NAME: mysql
#    volumes:
#      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
#    networks:
#      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
